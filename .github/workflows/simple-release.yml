name: Simple Release GitHub Actions

on:
  workflow_call:

jobs:
  create-release:
    name: Build and Create Tagged release
    runs-on: ubuntu-latest

    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}

      - name: 'Setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: Print GITHUB_WORKSPACE
        run: echo $GITHUB_WORKSPACE

      - name: Ensure directory exists
        run: mkdir -p .github/actions/
        
      - name: Download bump-manifest-version.js with logging
        run: curl -v -f -o .github/actions/bump-manifest-version.js https://raw.githubusercontent.com/CommunityRP-FiveM-Server/.github/961b50cd10fdda968a7a8a4b78af5fd2447cf650/.github/actions/bump-manifest-version.js

      - name: Print the content of bump-manifest-version.js
        run: cat .github/actions/bump-manifest-version.js
        
      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ github.ref_name }}

      - name: Push manifest change
        uses: EndBug/add-and-commit@v8
        with:
          add: fxmanifest.lua
          push: true
          author_name: Manifest Bumper
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'chore: bump manifest version to ${{ github.ref_name }}'

      - name: Update tag ref
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ github.ref_name }}

      - name: Bundle files
        run: |
          mkdir -p ./temp/esx_core
          rsync -av --progress ./ ./temp/esx_core/ --exclude temp --exclude .git --exclude .github
          cd ./temp && zip -r ../esx_core.zip ./esx_core
          
      - name: Create Release
        uses: 'marvinpinto/action-automatic-releases@v1.2.1'
        id: auto_release
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          title: '${{ env.RELEASE_VERSION }}'
          prerelease: false
          files: esx_core.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
